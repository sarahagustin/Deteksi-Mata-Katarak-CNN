# -*- coding: utf-8 -*-
"""CNN_MATA KATARAKK

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IumwX7ZBEgV0cA3V3_4-vow-VP7AY4Dw
"""

import numpy as np
import matplotlib.pyplot as plt
from skimage import io
from skimage.color import rgb2hsv

rgb_img = io.imread('https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSVkBZ5T5qFcZoQ_8Jsu7CulEEF3imjASMh4c-etX10riYj4HVB')

hsv_hsv = rgb2hsv(rgb_img)
hue_img = hsv_hsv[:, :, 2]

fig, ([ax0, ax1]) = plt.subplots(1, 2, figsize=(20, 20))

ax0.imshow(hue_img)
ax0.set_title("Original")
ax1.imshow(hsv_hsv)
ax1.set_title("Grayscale")

from skimage import data, filters, io
import matplotlib.pyplot as plt
import cv2
img = io.imread('https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSVkBZ5T5qFcZoQ_8Jsu7CulEEF3imjASMh4c-etX10riYj4HVB')

img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
imgC = cv2.Canny(img,20,40)

imgR = filters.roberts(img)
imgP = filters.prewitt(img)
vig, ax = plt.subplots(1,3, figsize=(10,8))
ax[0].imshow(img, cmap='gray')
ax[1].imshow(imgC, cmap='gray')
ax[2].imshow(imgP, cmap='gray')


plt.show()

import cv2
import numpy as np
from skimage import io

image=io.imread('https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSVkBZ5T5qFcZoQ_8Jsu7CulEEF3imjASMh4c-etX10riYj4HVB')
gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
io.imshow(image)

ret, thresh=cv2.threshold(gray,45,255,0)
contours, hierarchy=cv2.findContours(thresh.copy(),cv2.RETR_LIST,cv2.CHAIN_APPROX_NONE)
n=len(contours)-1
contours=sorted(contours,key=cv2.contourArea,reverse=False)[:n]
for c in contours:
  hull=cv2.convexHull(c)
cv2.drawContours(image,[hull],0,(0,255,0),2)
io.imshow(image)
io.show()

import cv2
import numpy as np
from skimage import io

image=io.imread('https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSVkBZ5T5qFcZoQ_8Jsu7CulEEF3imjASMh4c-etX10riYj4HVB')
gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
io.imshow(image)

ret, thresh=cv2.threshold(gray,55,255,60)
contours, hierarchy=cv2.findContours(thresh.copy(),cv2.RETR_LIST,cv2.CHAIN_APPROX_NONE)
n=len(contours)-1
contours=sorted(contours,key=cv2.contourArea,reverse=False)[:n]
for c in contours:
  hull=cv2.convexHull(c)
cv2.drawContours(image,[hull],0,(0,255,0),2)
io.imshow(image)
io.show()

import numpy as np
import cv2
#memanggil library cv2 yaitu OpenCv
import matplotlib.pyplot as plt
from skimage import io

img=io.imread('https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSVkBZ5T5qFcZoQ_8Jsu7CulEEF3imjASMh4c-etX10riYj4HVB')
#membaca gambar pada link

grid_HSV = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)
#mengubah gambar BGR ke HVS

lower = np.array([0,100,100])
upper = np.array([400,255,255])
#menentukan nilai batasnya

mask = cv2.inRange(grid_HSV, lower, upper)
res = cv2.bitwise_and(img, grid_HSV, mask=mask)
#hasil segmentasi

fig, ax = plt.subplots(1,4, figsize = (20,8))
ax[0].imshow(img)
ax[1].imshow(grid_HSV)
ax[2].imshow(mask)
ax[3].imshow(res)
plt.show()

import cv2
import numpy as np
from skimage import io

image=io.imread('https://images.tokopedia.net/img/KRMmCm/2022/10/28/dba3c4ee-71e6-4cbe-ad85-473050034dc8.jpg')[220:450, 200:540 ]
gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
io.imshow(image)

ret, thresh=cv2.threshold(gray,670,250,20)
contours, hierarchy=cv2.findContours(thresh.copy(),cv2.RETR_LIST,cv2.CHAIN_APPROX_NONE)
n=len(contours)-1
contours=sorted(contours,key=cv2.contourArea,reverse=False)[:n]
for c in contours:
  hull=cv2.convexHull(c)
cv2.drawContours(image,[hull],0,(255,255,255),2)
io.imshow(image)
io.show()

import numpy as np
import cv2
#memanggil library cv2 yaitu OpenCv
import matplotlib.pyplot as plt
from skimage import io

img=io.imread('https://images.tokopedia.net/img/KRMmCm/2022/10/28/dba3c4ee-71e6-4cbe-ad85-473050034dc8.jpg')
#membaca gambar pada link

grid_HSV = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)
#mengubah gambar BGR ke HVS

lower = np.array([0,100,100])
upper = np.array([400,255,255])
#menentukan nilai batasnya

mask = cv2.inRange(grid_HSV, lower, upper)
res = cv2.bitwise_and(img, grid_HSV, mask=mask)
#hasil segmentasi

fig, ax = plt.subplots(1,4, figsize = (20,8))
ax[0].imshow(img)
ax[1].imshow(grid_HSV)
ax[2].imshow(mask)
ax[3].imshow(res)
plt.show()